# Gestion des Employés avec SQLite

Ce script Python permet de gérer une base de données SQLite contenant des informations sur les employés, notamment leur nom et leur salaire. Il crée une table, insère des données et récupère les employés ayant un salaire supérieur à 50 000.

## Prérequis

- Python 3.x
- SQLite3

## Installation

1. Assurez-vous d'avoir Python 3.x installé sur votre machine.
2. Aucune installation supplémentaire n'est nécessaire pour SQLite3 car il est inclus avec Python.

## Utilisation

1. **Connexion à la base de données** : Le script se connecte à une base de données SQLite nommée `company.db`. Si la base de données n'existe pas, elle sera créée.

    ```python
    conn = sqlite3.connect('company.db')
    cursor = conn.cursor()
    ```

2. **Création de la table `employees`** : Le script crée une table `employees` si elle n'existe pas déjà.

    ```python
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS employees (
        name TEXT,
        salary INTEGER
    )
    ''')
    ```

3. **Insertion de données** : Le script insère des données dans la table `employees`.

    ```python
    employees = [
        ('Alice', 60000),
        ('Bob', 45000),
        ('Charlie', 70000),
        ('David', 30000)
    ]

    cursor.executemany('INSERT INTO employees (name, salary) VALUES (?, ?)', employees)
    ```

4. **Récupération des employés avec un salaire supérieur à 50 000** : Le script récupère et affiche les employés ayant un salaire supérieur à 50 000.

    ```python
    cursor.execute('SELECT name, salary FROM employees WHERE salary > 50000')
    high_salary_employees = cursor.fetchall()

    print("Employés avec un salaire supérieur à 50000 :")
    for employee in high_salary_employees:
        print(f"Nom: {employee[0]}, Salaire: {employee[1]}")
    ```

5. **Fermeture de la connexion** : Le script sauvegarde les modifications et ferme la connexion à la base de données.

    ```python
    conn.commit()
    conn.close()
    ```

## Auteur

- DIAWARA Karim
